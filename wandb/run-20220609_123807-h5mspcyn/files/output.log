train.py
loading annotations into memory...
Done (t=12.68s)
creating index...
ftfy or spacy is not installed using BERT BasicTokenizer instead of ftfy.
index created!
Some weights of the model checkpoint at openai/clip-vit-base-patch32 were not used when initializing CLIPTextModel: ['vision_model.encoder.layers.7.self_attn.q_proj.bias', 'vision_model.encoder.layers.0.self_attn.q_proj.bias', 'vision_model.encoder.layers.9.self_attn.out_proj.bias', 'vision_model.encoder.layers.5.self_attn.out_proj.bias', 'vision_model.encoder.layers.10.mlp.fc1.bias', 'vision_model.post_layernorm.bias', 'vision_model.encoder.layers.5.layer_norm1.bias', 'vision_model.encoder.layers.4.layer_norm1.weight', 'vision_model.pre_layrnorm.bias', 'vision_model.encoder.layers.4.self_attn.q_proj.bias', 'vision_model.encoder.layers.7.layer_norm2.bias', 'vision_model.encoder.layers.0.layer_norm2.weight', 'vision_model.encoder.layers.0.layer_norm1.weight', 'vision_model.encoder.layers.1.layer_norm1.weight', 'vision_model.encoder.layers.4.self_attn.v_proj.bias', 'vision_model.encoder.layers.7.self_attn.v_proj.weight', 'vision_model.encoder.layers.6.self_attn.q_proj.weight', 'vision_model.encoder.layers.8.self_attn.k_proj.weight', 'vision_model.encoder.layers.4.self_attn.v_proj.weight', 'vision_model.encoder.layers.1.layer_norm2.weight', 'vision_model.encoder.layers.9.mlp.fc2.weight', 'vision_model.encoder.layers.10.self_attn.q_proj.weight', 'vision_model.encoder.layers.8.layer_norm2.weight', 'vision_model.encoder.layers.5.layer_norm2.bias', 'vision_model.encoder.layers.1.self_attn.k_proj.bias', 'vision_model.embeddings.class_embedding', 'vision_model.encoder.layers.8.self_attn.out_proj.weight', 'vision_model.encoder.layers.5.self_attn.q_proj.weight', 'visual_projection.weight', 'vision_model.encoder.layers.9.self_attn.k_proj.bias', 'vision_model.encoder.layers.10.self_attn.k_proj.weight', 'vision_model.encoder.layers.6.layer_norm1.weight', 'vision_model.encoder.layers.11.layer_norm2.bias', 'vision_model.encoder.layers.7.self_attn.out_proj.weight', 'vision_model.encoder.layers.11.mlp.fc1.weight', 'vision_model.encoder.layers.6.layer_norm2.bias', 'vision_model.encoder.layers.2.self_attn.q_proj.bias', 'vision_model.encoder.layers.0.self_attn.out_proj.weight', 'vision_model.encoder.layers.3.self_attn.k_proj.weight', 'vision_model.encoder.layers.3.self_attn.v_proj.bias', 'vision_model.encoder.layers.7.layer_norm1.weight', 'vision_model.encoder.layers.0.mlp.fc1.weight', 'vision_model.encoder.layers.0.self_attn.k_proj.weight', 'vision_model.encoder.layers.1.mlp.fc1.weight', 'vision_model.encoder.layers.2.layer_norm1.weight', 'vision_model.encoder.layers.0.layer_norm1.bias', 'vision_model.encoder.layers.1.self_attn.out_proj.weight', 'vision_model.encoder.layers.2.mlp.fc1.weight', 'vision_model.encoder.layers.3.layer_norm2.bias', 'vision_model.encoder.layers.7.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.self_attn.k_proj.bias', 'vision_model.encoder.layers.11.mlp.fc1.bias', 'vision_model.encoder.layers.4.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.self_attn.q_proj.bias', 'vision_model.encoder.layers.5.self_attn.k_proj.weight', 'vision_model.encoder.layers.3.self_attn.out_proj.weight', 'vision_model.encoder.layers.1.layer_norm2.bias', 'vision_model.encoder.layers.8.mlp.fc2.bias', 'vision_model.encoder.layers.1.mlp.fc1.bias', 'vision_model.encoder.layers.0.self_attn.out_proj.bias', 'vision_model.encoder.layers.3.layer_norm1.weight', 'vision_model.encoder.layers.7.mlp.fc2.weight', 'vision_model.encoder.layers.2.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.mlp.fc1.bias', 'vision_model.encoder.layers.9.layer_norm2.bias', 'vision_model.encoder.layers.3.self_attn.q_proj.weight', 'vision_model.encoder.layers.7.self_attn.v_proj.bias', 'vision_model.encoder.layers.3.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.self_attn.out_proj.weight', 'vision_model.encoder.layers.11.self_attn.k_proj.bias', 'vision_model.encoder.layers.6.self_attn.out_proj.weight', 'vision_model.encoder.layers.6.self_attn.k_proj.bias', 'vision_model.encoder.layers.1.self_attn.q_proj.weight', 'vision_model.encoder.layers.6.self_attn.k_proj.weight', 'vision_model.encoder.layers.8.mlp.fc1.bias', 'vision_model.encoder.layers.10.mlp.fc1.weight', 'vision_model.encoder.layers.5.self_attn.v_proj.weight', 'vision_model.encoder.layers.4.mlp.fc2.weight', 'vision_model.encoder.layers.2.self_attn.v_proj.bias', 'vision_model.encoder.layers.2.layer_norm2.bias', 'vision_model.encoder.layers.11.self_attn.q_proj.weight', 'vision_model.encoder.layers.0.self_attn.v_proj.weight', 'vision_model.encoder.layers.8.layer_norm1.bias', 'vision_model.encoder.layers.2.mlp.fc2.weight', 'vision_model.encoder.layers.11.layer_norm2.weight', 'vision_model.encoder.layers.9.self_attn.v_proj.bias', 'vision_model.encoder.layers.9.layer_norm1.bias', 'vision_model.encoder.layers.10.self_attn.q_proj.bias', 'vision_model.encoder.layers.10.self_attn.v_proj.bias', 'vision_model.encoder.layers.7.self_attn.k_proj.weight', 'vision_model.encoder.layers.9.self_attn.q_proj.weight', 'vision_model.encoder.layers.4.mlp.fc1.bias', 'vision_model.encoder.layers.5.mlp.fc1.bias', 'vision_model.encoder.layers.1.self_attn.k_proj.weight', 'vision_model.encoder.layers.5.self_attn.v_proj.bias', 'vision_model.encoder.layers.11.mlp.fc2.weight', 'vision_model.encoder.layers.4.self_attn.k_proj.bias', 'vision_model.encoder.layers.7.self_attn.q_proj.weight', 'vision_model.encoder.layers.8.mlp.fc1.weight', 'vision_model.encoder.layers.5.mlp.fc2.weight', 'vision_model.encoder.layers.5.self_attn.q_proj.bias', 'vision_model.encoder.layers.10.self_attn.v_proj.weight', 'vision_model.encoder.layers.11.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.mlp.fc1.bias', 'vision_model.encoder.layers.6.mlp.fc1.weight', 'vision_model.encoder.layers.11.self_attn.k_proj.weight', 'vision_model.encoder.layers.2.self_attn.v_proj.weight', 'vision_model.encoder.layers.11.mlp.fc2.bias', 'vision_model.encoder.layers.8.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.layer_norm2.weight', 'vision_model.encoder.layers.0.self_attn.q_proj.weight', 'vision_model.encoder.layers.1.self_attn.out_proj.bias', 'vision_model.encoder.layers.3.layer_norm2.weight', 'vision_model.embeddings.patch_embedding.weight', 'vision_model.encoder.layers.6.layer_norm2.weight', 'vision_model.encoder.layers.11.layer_norm1.bias', 'vision_model.encoder.layers.4.layer_norm2.bias', 'vision_model.encoder.layers.2.self_attn.q_proj.weight', 'vision_model.encoder.layers.8.self_attn.v_proj.bias', 'vision_model.encoder.layers.10.mlp.fc2.weight', 'vision_model.encoder.layers.3.self_attn.q_proj.bias', 'vision_model.encoder.layers.1.self_attn.v_proj.bias', 'vision_model.encoder.layers.5.self_attn.k_proj.bias', 'vision_model.encoder.layers.8.self_attn.k_proj.bias', 'vision_model.encoder.layers.5.mlp.fc2.bias', 'vision_model.encoder.layers.2.layer_norm1.bias', 'vision_model.encoder.layers.6.self_attn.v_proj.weight', 'vision_model.encoder.layers.6.mlp.fc1.bias', 'vision_model.encoder.layers.0.self_attn.k_proj.bias', 'vision_model.encoder.layers.9.mlp.fc2.bias', 'vision_model.encoder.layers.0.mlp.fc2.weight', 'vision_model.encoder.layers.6.mlp.fc2.weight', 'vision_model.encoder.layers.10.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.mlp.fc1.weight', 'vision_model.encoder.layers.11.self_attn.v_proj.weight', 'vision_model.encoder.layers.10.layer_norm2.weight', 'vision_model.encoder.layers.11.self_attn.out_proj.weight', 'vision_model.encoder.layers.10.layer_norm1.weight', 'vision_model.encoder.layers.10.mlp.fc2.bias', 'vision_model.encoder.layers.8.self_attn.q_proj.weight', 'vision_model.encoder.layers.1.self_attn.v_proj.weight', 'vision_model.encoder.layers.6.self_attn.q_proj.bias', 'vision_model.encoder.layers.9.self_attn.v_proj.weight', 'vision_model.encoder.layers.11.self_attn.v_proj.bias', 'vision_model.encoder.layers.10.self_attn.out_proj.weight', 'vision_model.encoder.layers.8.layer_norm2.bias', 'text_projection.weight', 'vision_model.encoder.layers.1.layer_norm1.bias', 'vision_model.encoder.layers.0.mlp.fc1.bias', 'vision_model.encoder.layers.3.self_attn.k_proj.bias', 'vision_model.encoder.layers.0.layer_norm2.bias', 'vision_model.encoder.layers.5.layer_norm1.weight', 'vision_model.encoder.layers.3.mlp.fc2.bias', 'vision_model.encoder.layers.3.layer_norm1.bias', 'vision_model.encoder.layers.4.mlp.fc2.bias', 'vision_model.encoder.layers.8.self_attn.q_proj.bias', 'vision_model.encoder.layers.3.self_attn.v_proj.weight', 'vision_model.encoder.layers.9.layer_norm2.weight', 'vision_model.encoder.layers.6.layer_norm1.bias', 'vision_model.encoder.layers.4.self_attn.out_proj.weight', 'vision_model.encoder.layers.6.mlp.fc2.bias', 'vision_model.encoder.layers.6.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.self_attn.k_proj.weight', 'vision_model.encoder.layers.9.mlp.fc1.weight', 'vision_model.encoder.layers.0.self_attn.v_proj.bias', 'vision_model.post_layernorm.weight', 'vision_model.encoder.layers.1.mlp.fc2.weight', 'vision_model.encoder.layers.2.mlp.fc2.bias', 'vision_model.encoder.layers.5.self_attn.out_proj.weight', 'vision_model.encoder.layers.8.layer_norm1.weight', 'vision_model.encoder.layers.4.self_attn.q_proj.weight', 'vision_model.encoder.layers.11.self_attn.q_proj.bias', 'vision_model.pre_layrnorm.weight', 'vision_model.encoder.layers.4.layer_norm2.weight', 'vision_model.encoder.layers.0.mlp.fc2.bias', 'vision_model.encoder.layers.1.self_attn.q_proj.bias', 'vision_model.embeddings.position_embedding.weight', 'vision_model.encoder.layers.9.layer_norm1.weight', 'vision_model.encoder.layers.8.mlp.fc2.weight', 'vision_model.encoder.layers.4.mlp.fc1.weight', 'vision_model.encoder.layers.2.mlp.fc1.bias', 'vision_model.encoder.layers.2.self_attn.k_proj.weight', 'vision_model.encoder.layers.2.layer_norm2.weight', 'vision_model.encoder.layers.3.mlp.fc1.weight', 'vision_model.embeddings.position_ids', 'vision_model.encoder.layers.6.self_attn.v_proj.bias', 'vision_model.encoder.layers.8.self_attn.v_proj.weight', 'vision_model.encoder.layers.5.mlp.fc1.weight', 'vision_model.encoder.layers.4.layer_norm1.bias', 'vision_model.encoder.layers.7.layer_norm1.bias', 'vision_model.encoder.layers.5.layer_norm2.weight', 'vision_model.encoder.layers.1.mlp.fc2.bias', 'vision_model.encoder.layers.11.layer_norm1.weight', 'logit_scale', 'vision_model.encoder.layers.10.layer_norm2.bias', 'vision_model.encoder.layers.7.mlp.fc2.bias', 'vision_model.encoder.layers.10.self_attn.k_proj.bias', 'vision_model.encoder.layers.2.self_attn.k_proj.bias', 'vision_model.encoder.layers.2.self_attn.out_proj.weight', 'vision_model.encoder.layers.10.layer_norm1.bias', 'vision_model.encoder.layers.3.mlp.fc2.weight', 'vision_model.encoder.layers.3.mlp.fc1.bias', 'vision_model.encoder.layers.4.self_attn.k_proj.weight']
- This IS expected if you are initializing CLIPTextModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CLIPTextModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
instantiated sampler
instantiating dataloader
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
Some weights of the model checkpoint at openai/clip-vit-base-patch32 were not used when initializing CLIPVisionModel: ['text_model.encoder.layers.3.self_attn.v_proj.weight', 'text_model.encoder.layers.11.self_attn.v_proj.bias', 'text_model.encoder.layers.7.self_attn.k_proj.bias', 'text_model.encoder.layers.3.self_attn.q_proj.weight', 'text_model.encoder.layers.11.self_attn.q_proj.bias', 'text_model.encoder.layers.8.mlp.fc2.weight', 'text_model.encoder.layers.7.self_attn.out_proj.weight', 'text_model.encoder.layers.11.self_attn.k_proj.bias', 'text_model.encoder.layers.2.self_attn.v_proj.weight', 'text_model.encoder.layers.2.self_attn.v_proj.bias', 'text_model.encoder.layers.4.layer_norm1.weight', 'text_model.encoder.layers.3.self_attn.q_proj.bias', 'text_model.encoder.layers.8.layer_norm2.bias', 'text_model.encoder.layers.11.layer_norm1.bias', 'text_model.encoder.layers.6.self_attn.v_proj.weight', 'text_model.encoder.layers.9.mlp.fc2.weight', 'text_model.embeddings.position_embedding.weight', 'text_model.encoder.layers.3.layer_norm2.bias', 'text_model.encoder.layers.9.self_attn.out_proj.weight', 'text_model.encoder.layers.9.mlp.fc2.bias', 'text_model.encoder.layers.5.self_attn.q_proj.bias', 'text_model.encoder.layers.4.mlp.fc1.weight', 'text_model.encoder.layers.8.self_attn.q_proj.weight', 'text_model.encoder.layers.6.self_attn.q_proj.bias', 'text_model.encoder.layers.10.mlp.fc1.bias', 'text_model.encoder.layers.8.self_attn.q_proj.bias', 'text_model.encoder.layers.2.self_attn.out_proj.weight', 'text_model.encoder.layers.1.self_attn.out_proj.bias', 'visual_projection.weight', 'text_model.encoder.layers.0.self_attn.out_proj.weight', 'text_model.encoder.layers.11.self_attn.v_proj.weight', 'text_model.encoder.layers.7.mlp.fc1.bias', 'text_model.encoder.layers.1.self_attn.v_proj.weight', 'text_model.encoder.layers.4.mlp.fc2.weight', 'text_model.encoder.layers.0.self_attn.v_proj.weight', 'text_model.encoder.layers.5.self_attn.v_proj.weight', 'text_model.encoder.layers.2.layer_norm1.weight', 'text_model.encoder.layers.0.mlp.fc2.bias', 'text_model.encoder.layers.9.layer_norm1.bias', 'text_model.encoder.layers.1.self_attn.k_proj.weight', 'text_model.encoder.layers.2.self_attn.k_proj.weight', 'text_model.encoder.layers.1.self_attn.q_proj.weight', 'text_model.encoder.layers.2.mlp.fc2.weight', 'text_model.encoder.layers.0.mlp.fc1.bias', 'text_model.encoder.layers.0.layer_norm1.bias', 'text_model.encoder.layers.2.self_attn.q_proj.bias', 'text_model.encoder.layers.7.layer_norm2.weight', 'text_model.encoder.layers.3.mlp.fc2.weight', 'text_model.encoder.layers.11.mlp.fc2.weight', 'text_model.encoder.layers.6.self_attn.k_proj.weight', 'text_model.encoder.layers.6.self_attn.k_proj.bias', 'text_model.encoder.layers.10.layer_norm2.bias', 'text_model.encoder.layers.2.layer_norm2.bias', 'text_model.encoder.layers.10.self_attn.out_proj.bias', 'text_model.encoder.layers.7.self_attn.k_proj.weight', 'text_model.encoder.layers.11.mlp.fc2.bias', 'text_model.encoder.layers.10.self_attn.k_proj.weight', 'text_model.encoder.layers.5.mlp.fc1.weight', 'text_model.encoder.layers.7.layer_norm2.bias', 'text_model.encoder.layers.10.mlp.fc2.weight', 'text_model.encoder.layers.6.layer_norm1.weight', 'text_model.encoder.layers.9.layer_norm2.bias', 'text_model.encoder.layers.11.layer_norm2.weight', 'text_model.encoder.layers.2.layer_norm1.bias', 'text_model.encoder.layers.8.self_attn.k_proj.bias', 'text_model.encoder.layers.11.self_attn.q_proj.weight', 'text_model.encoder.layers.9.self_attn.v_proj.weight', 'text_model.encoder.layers.9.self_attn.q_proj.bias', 'text_model.encoder.layers.10.self_attn.q_proj.weight', 'text_model.encoder.layers.1.layer_norm1.bias', 'text_model.encoder.layers.1.layer_norm2.weight', 'text_model.encoder.layers.7.mlp.fc2.weight', 'text_model.encoder.layers.8.mlp.fc2.bias', 'text_model.encoder.layers.8.mlp.fc1.bias', 'text_model.encoder.layers.5.self_attn.out_proj.bias', 'text_model.encoder.layers.9.layer_norm1.weight', 'text_model.encoder.layers.2.self_attn.q_proj.weight', 'text_model.encoder.layers.3.mlp.fc2.bias', 'text_model.encoder.layers.2.mlp.fc1.weight', 'text_model.encoder.layers.4.mlp.fc1.bias', 'text_model.encoder.layers.7.self_attn.v_proj.weight', 'text_model.encoder.layers.4.self_attn.out_proj.bias', 'text_model.encoder.layers.8.layer_norm1.bias', 'text_model.encoder.layers.3.self_attn.v_proj.bias', 'text_model.encoder.layers.5.layer_norm2.weight', 'text_model.encoder.layers.10.self_attn.v_proj.weight', 'text_model.encoder.layers.3.self_attn.out_proj.bias', 'text_model.encoder.layers.1.self_attn.v_proj.bias', 'text_model.encoder.layers.5.layer_norm1.weight', 'text_model.encoder.layers.3.self_attn.k_proj.weight', 'text_model.encoder.layers.4.mlp.fc2.bias', 'text_model.encoder.layers.9.layer_norm2.weight', 'text_model.encoder.layers.4.self_attn.v_proj.weight', 'text_model.encoder.layers.0.self_attn.k_proj.weight', 'text_model.encoder.layers.10.layer_norm2.weight', 'text_model.encoder.layers.7.layer_norm1.bias', 'text_model.encoder.layers.3.self_attn.out_proj.weight', 'text_model.encoder.layers.5.self_attn.k_proj.bias', 'text_model.encoder.layers.6.mlp.fc1.weight', 'text_model.encoder.layers.5.layer_norm2.bias', 'text_model.encoder.layers.5.self_attn.k_proj.weight', 'text_model.encoder.layers.9.mlp.fc1.weight', 'text_model.encoder.layers.1.mlp.fc2.weight', 'text_model.encoder.layers.4.self_attn.k_proj.weight', 'text_model.encoder.layers.10.self_attn.v_proj.bias', 'text_model.encoder.layers.9.mlp.fc1.bias', 'text_model.encoder.layers.8.layer_norm2.weight', 'text_model.encoder.layers.2.mlp.fc2.bias', 'text_model.encoder.layers.5.self_attn.q_proj.weight', 'text_model.encoder.layers.0.self_attn.k_proj.bias', 'text_model.encoder.layers.10.self_attn.k_proj.bias', 'text_model.encoder.layers.6.self_attn.out_proj.bias', 'text_model.encoder.layers.11.self_attn.out_proj.bias', 'text_model.encoder.layers.8.self_attn.out_proj.bias', 'text_model.encoder.layers.10.layer_norm1.bias', 'text_model.encoder.layers.1.self_attn.q_proj.bias', 'text_model.encoder.layers.6.self_attn.v_proj.bias', 'text_model.encoder.layers.6.mlp.fc2.weight', 'text_model.encoder.layers.7.layer_norm1.weight', 'text_model.encoder.layers.3.layer_norm1.weight', 'text_model.final_layer_norm.bias', 'text_model.embeddings.position_ids', 'text_model.encoder.layers.2.self_attn.k_proj.bias', 'text_model.encoder.layers.3.mlp.fc1.weight', 'text_model.encoder.layers.0.mlp.fc1.weight', 'text_model.encoder.layers.9.self_attn.k_proj.bias', 'text_model.encoder.layers.10.mlp.fc1.weight', 'text_model.embeddings.token_embedding.weight', 'text_model.encoder.layers.6.layer_norm1.bias', 'text_model.encoder.layers.5.mlp.fc2.bias', 'text_model.encoder.layers.6.self_attn.out_proj.weight', 'text_model.encoder.layers.0.layer_norm1.weight', 'text_model.encoder.layers.11.self_attn.k_proj.weight', 'text_model.encoder.layers.5.layer_norm1.bias', 'text_model.encoder.layers.0.self_attn.out_proj.bias', 'text_model.encoder.layers.5.mlp.fc1.bias', 'text_model.encoder.layers.11.self_attn.out_proj.weight', 'text_model.encoder.layers.0.self_attn.q_proj.weight', 'text_model.encoder.layers.9.self_attn.out_proj.bias', 'text_model.encoder.layers.9.self_attn.k_proj.weight', 'text_model.encoder.layers.1.mlp.fc1.weight', 'text_model.encoder.layers.4.layer_norm2.weight', 'text_model.encoder.layers.1.mlp.fc1.bias', 'text_model.encoder.layers.4.self_attn.k_proj.bias', 'text_projection.weight', 'text_model.encoder.layers.10.layer_norm1.weight', 'text_model.encoder.layers.6.mlp.fc1.bias', 'text_model.encoder.layers.2.mlp.fc1.bias', 'text_model.encoder.layers.1.self_attn.out_proj.weight', 'text_model.encoder.layers.5.self_attn.out_proj.weight', 'text_model.encoder.layers.5.mlp.fc2.weight', 'text_model.encoder.layers.6.self_attn.q_proj.weight', 'text_model.encoder.layers.5.self_attn.v_proj.bias', 'text_model.encoder.layers.7.self_attn.q_proj.weight', 'text_model.encoder.layers.8.mlp.fc1.weight', 'text_model.encoder.layers.7.mlp.fc1.weight', 'text_model.encoder.layers.11.layer_norm1.weight', 'text_model.encoder.layers.2.self_attn.out_proj.bias', 'text_model.encoder.layers.8.self_attn.k_proj.weight', 'text_model.encoder.layers.3.self_attn.k_proj.bias', 'text_model.encoder.layers.4.layer_norm1.bias', 'text_model.encoder.layers.8.self_attn.v_proj.weight', 'text_model.encoder.layers.1.mlp.fc2.bias', 'text_model.encoder.layers.8.self_attn.v_proj.bias', 'text_model.encoder.layers.10.self_attn.q_proj.bias', 'text_model.final_layer_norm.weight', 'text_model.encoder.layers.4.self_attn.q_proj.bias', 'text_model.encoder.layers.4.layer_norm2.bias', 'text_model.encoder.layers.7.mlp.fc2.bias', 'text_model.encoder.layers.1.layer_norm1.weight', 'text_model.encoder.layers.11.mlp.fc1.bias', 'text_model.encoder.layers.1.self_attn.k_proj.bias', 'text_model.encoder.layers.0.self_attn.q_proj.bias', 'text_model.encoder.layers.2.layer_norm2.weight', 'text_model.encoder.layers.9.self_attn.v_proj.bias', 'text_model.encoder.layers.3.layer_norm2.weight', 'text_model.encoder.layers.4.self_attn.q_proj.weight', 'text_model.encoder.layers.4.self_attn.out_proj.weight', 'text_model.encoder.layers.11.mlp.fc1.weight', 'text_model.encoder.layers.11.layer_norm2.bias', 'text_model.encoder.layers.0.layer_norm2.weight', 'text_model.encoder.layers.0.layer_norm2.bias', 'text_model.encoder.layers.8.layer_norm1.weight', 'text_model.encoder.layers.3.layer_norm1.bias', 'text_model.encoder.layers.6.mlp.fc2.bias', 'text_model.encoder.layers.6.layer_norm2.weight', 'text_model.encoder.layers.3.mlp.fc1.bias', 'text_model.encoder.layers.4.self_attn.v_proj.bias', 'text_model.encoder.layers.1.layer_norm2.bias', 'text_model.encoder.layers.0.mlp.fc2.weight', 'text_model.encoder.layers.10.mlp.fc2.bias', 'text_model.encoder.layers.7.self_attn.out_proj.bias', 'logit_scale', 'text_model.encoder.layers.0.self_attn.v_proj.bias', 'text_model.encoder.layers.7.self_attn.q_proj.bias', 'text_model.encoder.layers.6.layer_norm2.bias', 'text_model.encoder.layers.7.self_attn.v_proj.bias', 'text_model.encoder.layers.10.self_attn.out_proj.weight', 'text_model.encoder.layers.8.self_attn.out_proj.weight', 'text_model.encoder.layers.9.self_attn.q_proj.weight']
- This IS expected if you are initializing CLIPVisionModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CLIPVisionModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 0, "loss": 7.880224227905273, "time": 0}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
/home/aneesh/github/slot_vqa/train.py:237: UserWarning: torch.nn.utils.clip_grad_norm is now deprecated in favor of torch.nn.utils.clip_grad_norm_.
  torch.nn.utils.clip_grad_norm(model.parameters(), args.clip)
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 5, "loss": 7.486581325531006, "time": 5}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 21, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 21])
inp.shape=torch.Size([2, 21])
x.shape after mbert=torch.Size([2, 21, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 10, "loss": 7.620453834533691, "time": 11}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 15, "loss": 7.432290077209473, "time": 17}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 8, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 8])
inp.shape=torch.Size([2, 8])
x.shape after mbert=torch.Size([2, 8, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 20, "loss": 7.27981424331665, "time": 23}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 22, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 22])
inp.shape=torch.Size([2, 22])
x.shape after mbert=torch.Size([2, 22, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 25, "loss": 7.547468662261963, "time": 29}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 19, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 19])
inp.shape=torch.Size([2, 19])
x.shape after mbert=torch.Size([2, 19, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 8, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 8])
inp.shape=torch.Size([2, 8])
x.shape after mbert=torch.Size([2, 8, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 30, "loss": 7.645051956176758, "time": 35}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 35, "loss": 7.616385459899902, "time": 41}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 40, "loss": 7.504704475402832, "time": 47}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 19, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 19])
inp.shape=torch.Size([2, 19])
x.shape after mbert=torch.Size([2, 19, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 45, "loss": 7.475785255432129, "time": 53}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 50, "loss": 7.750861644744873, "time": 58}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 19, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 19])
inp.shape=torch.Size([2, 19])
x.shape after mbert=torch.Size([2, 19, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 55, "loss": 7.3213605880737305, "time": 64}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 60, "loss": 7.5030012130737305, "time": 70}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 65, "loss": 7.5431437492370605, "time": 76}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 70, "loss": 7.283163070678711, "time": 81}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 75, "loss": 7.6855902671813965, "time": 87}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 80, "loss": 7.777302265167236, "time": 93}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 85, "loss": 7.5147385597229, "time": 99}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 90, "loss": 7.43070125579834, "time": 105}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 95, "loss": 7.557629585266113, "time": 111}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 100, "loss": 7.384493827819824, "time": 116}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 16, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 16])
inp.shape=torch.Size([2, 16])
x.shape after mbert=torch.Size([2, 16, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 105, "loss": 7.511327743530273, "time": 122}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 8, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 8])
inp.shape=torch.Size([2, 8])
x.shape after mbert=torch.Size([2, 8, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 110, "loss": 7.663837432861328, "time": 128}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 19, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 19])
inp.shape=torch.Size([2, 19])
x.shape after mbert=torch.Size([2, 19, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 12, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 12])
inp.shape=torch.Size([2, 12])
x.shape after mbert=torch.Size([2, 12, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 115, "loss": 7.50858211517334, "time": 134}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 9, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 9])
inp.shape=torch.Size([2, 9])
x.shape after mbert=torch.Size([2, 9, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 18, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 18])
inp.shape=torch.Size([2, 18])
x.shape after mbert=torch.Size([2, 18, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 120, "loss": 7.638899326324463, "time": 139}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 8, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 8])
inp.shape=torch.Size([2, 8])
x.shape after mbert=torch.Size([2, 8, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 10, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 10])
inp.shape=torch.Size([2, 10])
x.shape after mbert=torch.Size([2, 10, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 15, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 15])
inp.shape=torch.Size([2, 15])
x.shape after mbert=torch.Size([2, 15, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 17, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 17])
inp.shape=torch.Size([2, 17])
x.shape after mbert=torch.Size([2, 17, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 125, "loss": 7.692944526672363, "time": 145}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 8, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 8])
inp.shape=torch.Size([2, 8])
x.shape after mbert=torch.Size([2, 8, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 13, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 13])
inp.shape=torch.Size([2, 13])
x.shape after mbert=torch.Size([2, 13, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 11, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 11])
inp.shape=torch.Size([2, 11])
x.shape after mbert=torch.Size([2, 11, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
{"epoch": 0, "step": 130, "loss": 7.672996520996094, "time": 151}
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 28, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 28])
inp.shape=torch.Size([2, 28])
x.shape after mbert=torch.Size([2, 28, 512])
torch.Size([2, 128])
ans.shape=torch.Size([2]), pred.shape=torch.Size([2, 1853])
Model saved in checkpoint
type(img)=<class 'PIL.Image.Image'>
type(img)=<class 'PIL.Image.Image'>
img.shape=torch.Size([2, 3, 224, 224]), ques.shape=torch.Size([2, 14, 1]) ,ans.shape=torch.Size([2])
mask.shape=torch.Size([2, 1, 14])
inp.shape=torch.Size([2, 14])
x.shape after mbert=torch.Size([2, 14, 512])
torch.Size([2, 128])
