
ftfy or spacy is not installed using BERT BasicTokenizer instead of ftfy.
train.py
loading annotations into memory...
Done (t=12.67s)
creating index...
Some weights of the model checkpoint at openai/clip-vit-base-patch32 were not used when initializing CLIPTextModel: ['vision_model.encoder.layers.4.layer_norm2.weight', 'vision_model.encoder.layers.2.mlp.fc2.weight', 'vision_model.encoder.layers.6.self_attn.q_proj.bias', 'vision_model.encoder.layers.9.layer_norm2.weight', 'vision_model.encoder.layers.7.self_attn.k_proj.weight', 'vision_model.encoder.layers.0.layer_norm2.weight', 'vision_model.encoder.layers.3.self_attn.q_proj.weight', 'vision_model.encoder.layers.5.layer_norm2.weight', 'vision_model.encoder.layers.7.mlp.fc1.weight', 'vision_model.encoder.layers.8.layer_norm2.weight', 'vision_model.encoder.layers.6.self_attn.v_proj.bias', 'vision_model.encoder.layers.11.mlp.fc2.weight', 'vision_model.encoder.layers.3.layer_norm2.weight', 'vision_model.encoder.layers.11.self_attn.v_proj.bias', 'vision_model.pre_layrnorm.bias', 'vision_model.encoder.layers.5.mlp.fc1.weight', 'vision_model.encoder.layers.2.layer_norm1.weight', 'vision_model.encoder.layers.6.layer_norm2.weight', 'vision_model.encoder.layers.11.layer_norm2.weight', 'vision_model.encoder.layers.8.mlp.fc2.bias', 'vision_model.embeddings.patch_embedding.weight', 'vision_model.encoder.layers.1.layer_norm1.weight', 'vision_model.encoder.layers.9.self_attn.k_proj.weight', 'vision_model.encoder.layers.3.mlp.fc1.bias', 'vision_model.encoder.layers.9.self_attn.out_proj.weight', 'vision_model.encoder.layers.1.self_attn.k_proj.bias', 'vision_model.encoder.layers.6.self_attn.out_proj.weight', 'vision_model.embeddings.position_embedding.weight', 'vision_model.encoder.layers.5.self_attn.k_proj.bias', 'vision_model.encoder.layers.7.mlp.fc2.bias', 'vision_model.encoder.layers.2.mlp.fc1.bias', 'vision_model.encoder.layers.8.layer_norm1.bias', 'vision_model.encoder.layers.0.mlp.fc2.weight', 'vision_model.encoder.layers.1.self_attn.v_proj.weight', 'vision_model.post_layernorm.bias', 'vision_model.encoder.layers.8.layer_norm2.bias', 'vision_model.encoder.layers.0.self_attn.v_proj.bias', 'vision_model.encoder.layers.9.layer_norm2.bias', 'vision_model.encoder.layers.5.self_attn.out_proj.weight', 'vision_model.encoder.layers.2.self_attn.q_proj.bias', 'vision_model.encoder.layers.1.layer_norm2.bias', 'vision_model.encoder.layers.6.mlp.fc1.weight', 'vision_model.encoder.layers.11.mlp.fc1.bias', 'vision_model.encoder.layers.3.self_attn.v_proj.weight', 'vision_model.encoder.layers.11.self_attn.q_proj.weight', 'vision_model.encoder.layers.3.self_attn.q_proj.bias', 'vision_model.encoder.layers.4.mlp.fc2.bias', 'vision_model.encoder.layers.8.self_attn.k_proj.weight', 'vision_model.encoder.layers.11.self_attn.k_proj.weight', 'vision_model.encoder.layers.10.mlp.fc2.weight', 'visual_projection.weight', 'vision_model.encoder.layers.6.layer_norm1.weight', 'vision_model.encoder.layers.6.self_attn.out_proj.bias', 'vision_model.encoder.layers.1.self_attn.q_proj.bias', 'vision_model.encoder.layers.8.mlp.fc2.weight', 'vision_model.encoder.layers.9.layer_norm1.bias', 'vision_model.encoder.layers.6.self_attn.k_proj.bias', 'vision_model.embeddings.position_ids', 'vision_model.encoder.layers.5.mlp.fc1.bias', 'vision_model.encoder.layers.11.mlp.fc1.weight', 'vision_model.encoder.layers.1.self_attn.out_proj.weight', 'vision_model.encoder.layers.8.mlp.fc1.weight', 'vision_model.encoder.layers.5.self_attn.q_proj.weight', 'vision_model.encoder.layers.1.mlp.fc1.bias', 'vision_model.encoder.layers.3.self_attn.v_proj.bias', 'vision_model.encoder.layers.4.layer_norm1.weight', 'vision_model.encoder.layers.6.self_attn.q_proj.weight', 'vision_model.encoder.layers.3.self_attn.out_proj.weight', 'vision_model.encoder.layers.7.layer_norm1.weight', 'vision_model.encoder.layers.4.layer_norm2.bias', 'vision_model.encoder.layers.1.self_attn.v_proj.bias', 'vision_model.encoder.layers.6.self_attn.k_proj.weight', 'vision_model.encoder.layers.10.self_attn.q_proj.bias', 'vision_model.encoder.layers.2.self_attn.v_proj.weight', 'vision_model.encoder.layers.10.layer_norm2.weight', 'vision_model.encoder.layers.7.layer_norm1.bias', 'vision_model.encoder.layers.11.layer_norm2.bias', 'vision_model.encoder.layers.2.layer_norm2.weight', 'vision_model.encoder.layers.1.layer_norm2.weight', 'text_projection.weight', 'vision_model.encoder.layers.7.mlp.fc1.bias', 'vision_model.encoder.layers.0.self_attn.out_proj.weight', 'vision_model.encoder.layers.0.layer_norm1.bias', 'vision_model.encoder.layers.9.self_attn.q_proj.weight', 'vision_model.encoder.layers.10.self_attn.out_proj.weight', 'vision_model.encoder.layers.8.self_attn.v_proj.bias', 'vision_model.encoder.layers.3.mlp.fc1.weight', 'vision_model.encoder.layers.4.self_attn.out_proj.bias', 'vision_model.encoder.layers.11.layer_norm1.bias', 'vision_model.encoder.layers.0.self_attn.k_proj.weight', 'vision_model.encoder.layers.0.self_attn.q_proj.bias', 'vision_model.encoder.layers.10.layer_norm1.weight', 'vision_model.encoder.layers.8.self_attn.k_proj.bias', 'vision_model.encoder.layers.3.layer_norm1.weight', 'vision_model.encoder.layers.0.mlp.fc1.weight', 'vision_model.encoder.layers.10.self_attn.k_proj.bias', 'vision_model.encoder.layers.2.self_attn.q_proj.weight', 'vision_model.encoder.layers.6.mlp.fc2.bias', 'vision_model.encoder.layers.4.self_attn.v_proj.weight', 'vision_model.encoder.layers.3.self_attn.k_proj.weight', 'vision_model.encoder.layers.1.self_attn.k_proj.weight', 'vision_model.encoder.layers.3.layer_norm1.bias', 'vision_model.encoder.layers.9.self_attn.out_proj.bias', 'vision_model.encoder.layers.3.self_attn.k_proj.bias', 'vision_model.encoder.layers.1.self_attn.q_proj.weight', 'vision_model.encoder.layers.9.self_attn.k_proj.bias', 'vision_model.encoder.layers.10.layer_norm1.bias', 'vision_model.encoder.layers.11.mlp.fc2.bias', 'vision_model.encoder.layers.10.self_attn.q_proj.weight', 'vision_model.encoder.layers.6.layer_norm2.bias', 'vision_model.encoder.layers.2.self_attn.k_proj.bias', 'vision_model.encoder.layers.10.mlp.fc1.weight', 'vision_model.encoder.layers.2.self_attn.v_proj.bias', 'vision_model.encoder.layers.3.mlp.fc2.weight', 'vision_model.encoder.layers.2.layer_norm1.bias', 'vision_model.encoder.layers.1.layer_norm1.bias', 'vision_model.encoder.layers.5.layer_norm2.bias', 'vision_model.encoder.layers.8.self_attn.q_proj.weight', 'vision_model.encoder.layers.0.layer_norm2.bias', 'vision_model.encoder.layers.11.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.layer_norm2.bias', 'vision_model.encoder.layers.0.self_attn.v_proj.weight', 'vision_model.encoder.layers.7.layer_norm2.weight', 'vision_model.encoder.layers.8.mlp.fc1.bias', 'vision_model.encoder.layers.7.self_attn.k_proj.bias', 'vision_model.encoder.layers.4.self_attn.q_proj.bias', 'vision_model.encoder.layers.11.self_attn.out_proj.weight', 'vision_model.encoder.layers.10.self_attn.out_proj.bias', 'vision_model.encoder.layers.1.mlp.fc2.bias', 'vision_model.encoder.layers.11.self_attn.k_proj.bias', 'vision_model.encoder.layers.7.self_attn.out_proj.bias', 'vision_model.encoder.layers.8.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.mlp.fc2.bias', 'vision_model.encoder.layers.5.self_attn.v_proj.bias', 'vision_model.post_layernorm.weight', 'vision_model.encoder.layers.10.self_attn.v_proj.bias', 'vision_model.encoder.layers.4.self_attn.k_proj.bias', 'vision_model.embeddings.class_embedding', 'vision_model.encoder.layers.7.self_attn.v_proj.weight', 'vision_model.encoder.layers.4.self_attn.v_proj.bias', 'vision_model.encoder.layers.9.self_attn.v_proj.bias', 'vision_model.encoder.layers.5.self_attn.v_proj.weight', 'vision_model.encoder.layers.10.self_attn.v_proj.weight', 'vision_model.encoder.layers.2.mlp.fc1.weight', 'vision_model.encoder.layers.4.mlp.fc1.bias', 'vision_model.encoder.layers.3.mlp.fc2.bias', 'vision_model.encoder.layers.4.self_attn.out_proj.weight', 'vision_model.encoder.layers.8.self_attn.out_proj.weight', 'vision_model.encoder.layers.6.mlp.fc2.weight', 'vision_model.encoder.layers.7.self_attn.v_proj.bias', 'vision_model.encoder.layers.5.self_attn.out_proj.bias', 'vision_model.encoder.layers.7.self_attn.q_proj.bias', 'vision_model.encoder.layers.2.mlp.fc2.bias', 'vision_model.encoder.layers.8.self_attn.v_proj.weight', 'vision_model.encoder.layers.0.mlp.fc2.bias', 'vision_model.encoder.layers.2.layer_norm2.bias', 'vision_model.encoder.layers.2.self_attn.k_proj.weight', 'vision_model.encoder.layers.7.mlp.fc2.weight', 'vision_model.encoder.layers.3.layer_norm2.bias', 'vision_model.encoder.layers.6.self_attn.v_proj.weight', 'vision_model.encoder.layers.0.self_attn.q_proj.weight', 'vision_model.encoder.layers.5.mlp.fc2.weight', 'vision_model.encoder.layers.9.layer_norm1.weight', 'vision_model.encoder.layers.5.mlp.fc2.bias', 'vision_model.encoder.layers.2.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.self_attn.q_proj.bias', 'vision_model.encoder.layers.5.self_attn.q_proj.bias', 'vision_model.encoder.layers.7.self_attn.out_proj.weight', 'vision_model.encoder.layers.11.self_attn.q_proj.bias', 'vision_model.encoder.layers.9.mlp.fc1.weight', 'vision_model.encoder.layers.3.self_attn.out_proj.bias', 'vision_model.encoder.layers.10.mlp.fc1.bias', 'vision_model.encoder.layers.5.layer_norm1.weight', 'vision_model.encoder.layers.9.mlp.fc1.bias', 'vision_model.encoder.layers.5.layer_norm1.bias', 'vision_model.encoder.layers.8.self_attn.q_proj.bias', 'vision_model.encoder.layers.10.layer_norm2.bias', 'vision_model.encoder.layers.7.self_attn.q_proj.weight', 'vision_model.encoder.layers.1.self_attn.out_proj.bias', 'vision_model.encoder.layers.9.self_attn.v_proj.weight', 'vision_model.encoder.layers.0.mlp.fc1.bias', 'vision_model.pre_layrnorm.weight', 'logit_scale', 'vision_model.encoder.layers.0.self_attn.out_proj.bias', 'vision_model.encoder.layers.4.layer_norm1.bias', 'vision_model.encoder.layers.11.layer_norm1.weight', 'vision_model.encoder.layers.10.self_attn.k_proj.weight', 'vision_model.encoder.layers.4.self_attn.q_proj.weight', 'vision_model.encoder.layers.6.layer_norm1.bias', 'vision_model.encoder.layers.0.layer_norm1.weight', 'vision_model.encoder.layers.4.mlp.fc2.weight', 'vision_model.encoder.layers.9.mlp.fc2.weight', 'vision_model.encoder.layers.4.self_attn.k_proj.weight', 'vision_model.encoder.layers.6.mlp.fc1.bias', 'vision_model.encoder.layers.11.self_attn.v_proj.weight', 'vision_model.encoder.layers.10.mlp.fc2.bias', 'vision_model.encoder.layers.5.self_attn.k_proj.weight', 'vision_model.encoder.layers.8.layer_norm1.weight', 'vision_model.encoder.layers.1.mlp.fc1.weight', 'vision_model.encoder.layers.2.self_attn.out_proj.weight', 'vision_model.encoder.layers.0.self_attn.k_proj.bias', 'vision_model.encoder.layers.1.mlp.fc2.weight', 'vision_model.encoder.layers.4.mlp.fc1.weight']
- This IS expected if you are initializing CLIPTextModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CLIPTextModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
index created!
instantiated sampler
instantiating dataloader
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
Some weights of the model checkpoint at openai/clip-vit-base-patch32 were not used when initializing CLIPVisionModel: ['text_model.encoder.layers.5.layer_norm1.weight', 'text_model.encoder.layers.4.self_attn.q_proj.bias', 'text_model.encoder.layers.0.self_attn.q_proj.weight', 'text_model.encoder.layers.9.self_attn.v_proj.bias', 'text_model.encoder.layers.8.self_attn.q_proj.weight', 'text_model.encoder.layers.3.self_attn.q_proj.weight', 'text_model.encoder.layers.3.mlp.fc2.weight', 'text_model.encoder.layers.8.self_attn.q_proj.bias', 'text_model.encoder.layers.2.mlp.fc2.weight', 'text_model.encoder.layers.1.layer_norm2.bias', 'text_model.encoder.layers.7.mlp.fc1.bias', 'text_model.encoder.layers.0.self_attn.q_proj.bias', 'text_model.encoder.layers.4.self_attn.q_proj.weight', 'text_model.encoder.layers.5.self_attn.k_proj.bias', 'text_model.encoder.layers.1.mlp.fc2.weight', 'text_model.encoder.layers.6.layer_norm2.bias', 'text_model.encoder.layers.7.self_attn.v_proj.bias', 'text_model.encoder.layers.7.layer_norm2.bias', 'text_model.encoder.layers.6.mlp.fc1.weight', 'text_model.encoder.layers.6.layer_norm2.weight', 'text_model.encoder.layers.8.mlp.fc1.bias', 'text_model.encoder.layers.2.mlp.fc1.weight', 'text_model.encoder.layers.1.self_attn.q_proj.weight', 'text_model.encoder.layers.5.self_attn.out_proj.bias', 'text_model.embeddings.position_embedding.weight', 'text_model.encoder.layers.2.self_attn.v_proj.bias', 'text_model.encoder.layers.11.self_attn.out_proj.weight', 'text_model.encoder.layers.2.self_attn.q_proj.bias', 'text_model.encoder.layers.10.mlp.fc1.weight', 'text_model.encoder.layers.1.self_attn.k_proj.bias', 'text_model.encoder.layers.9.self_attn.v_proj.weight', 'text_model.encoder.layers.7.self_attn.v_proj.weight', 'text_model.encoder.layers.5.layer_norm1.bias', 'text_model.encoder.layers.4.mlp.fc2.bias', 'text_model.encoder.layers.4.layer_norm2.weight', 'text_model.encoder.layers.10.self_attn.q_proj.bias', 'text_model.encoder.layers.2.self_attn.out_proj.weight', 'text_model.encoder.layers.0.layer_norm2.weight', 'text_model.encoder.layers.1.layer_norm1.weight', 'text_model.encoder.layers.6.self_attn.out_proj.bias', 'text_model.encoder.layers.7.self_attn.k_proj.weight', 'text_model.encoder.layers.1.mlp.fc2.bias', 'text_model.encoder.layers.4.mlp.fc1.bias', 'text_model.encoder.layers.4.self_attn.v_proj.weight', 'text_model.encoder.layers.10.mlp.fc2.weight', 'text_model.encoder.layers.2.mlp.fc1.bias', 'text_model.encoder.layers.6.self_attn.k_proj.bias', 'text_model.encoder.layers.5.layer_norm2.bias', 'text_model.encoder.layers.3.mlp.fc1.bias', 'visual_projection.weight', 'text_model.encoder.layers.0.self_attn.out_proj.weight', 'text_model.encoder.layers.11.layer_norm1.weight', 'text_model.encoder.layers.2.mlp.fc2.bias', 'text_model.encoder.layers.5.mlp.fc2.weight', 'text_model.encoder.layers.7.layer_norm1.weight', 'text_model.encoder.layers.11.self_attn.k_proj.weight', 'text_model.encoder.layers.6.layer_norm1.bias', 'text_model.encoder.layers.9.mlp.fc2.weight', 'text_model.encoder.layers.3.self_attn.out_proj.weight', 'text_model.encoder.layers.10.mlp.fc1.bias', 'text_model.encoder.layers.2.layer_norm2.bias', 'text_model.encoder.layers.9.self_attn.q_proj.weight', 'text_model.encoder.layers.6.mlp.fc2.weight', 'text_model.encoder.layers.6.self_attn.q_proj.bias', 'text_model.encoder.layers.10.mlp.fc2.bias', 'text_model.encoder.layers.2.layer_norm1.bias', 'text_model.encoder.layers.6.self_attn.k_proj.weight', 'text_model.encoder.layers.3.self_attn.q_proj.bias', 'text_model.encoder.layers.8.mlp.fc2.bias', 'text_model.encoder.layers.11.mlp.fc2.weight', 'text_model.encoder.layers.1.layer_norm2.weight', 'text_model.encoder.layers.0.self_attn.k_proj.bias', 'text_model.encoder.layers.3.layer_norm1.bias', 'text_model.encoder.layers.2.self_attn.q_proj.weight', 'text_projection.weight', 'text_model.encoder.layers.8.layer_norm2.bias', 'text_model.encoder.layers.9.self_attn.k_proj.bias', 'text_model.encoder.layers.10.layer_norm1.bias', 'text_model.encoder.layers.0.layer_norm1.bias', 'text_model.encoder.layers.0.self_attn.out_proj.bias', 'text_model.encoder.layers.5.self_attn.out_proj.weight', 'text_model.encoder.layers.6.self_attn.q_proj.weight', 'text_model.encoder.layers.4.layer_norm1.bias', 'text_model.encoder.layers.10.self_attn.v_proj.bias', 'text_model.final_layer_norm.bias', 'text_model.encoder.layers.4.self_attn.k_proj.bias', 'text_model.encoder.layers.1.self_attn.k_proj.weight', 'text_model.encoder.layers.6.mlp.fc1.bias', 'text_model.embeddings.token_embedding.weight', 'text_model.encoder.layers.10.layer_norm2.weight', 'text_model.encoder.layers.11.self_attn.q_proj.weight', 'text_model.encoder.layers.9.self_attn.out_proj.weight', 'text_model.encoder.layers.10.self_attn.k_proj.weight', 'text_model.encoder.layers.5.mlp.fc1.bias', 'text_model.encoder.layers.3.layer_norm2.bias', 'text_model.encoder.layers.1.self_attn.out_proj.weight', 'text_model.encoder.layers.11.mlp.fc1.weight', 'text_model.embeddings.position_ids', 'text_model.encoder.layers.1.mlp.fc1.bias', 'text_model.encoder.layers.11.layer_norm2.bias', 'text_model.encoder.layers.8.self_attn.out_proj.weight', 'text_model.encoder.layers.0.self_attn.v_proj.bias', 'text_model.encoder.layers.8.mlp.fc2.weight', 'text_model.encoder.layers.1.self_attn.v_proj.bias', 'text_model.encoder.layers.5.self_attn.q_proj.weight', 'text_model.encoder.layers.4.mlp.fc2.weight', 'text_model.encoder.layers.2.self_attn.out_proj.bias', 'text_model.encoder.layers.4.mlp.fc1.weight', 'text_model.encoder.layers.10.self_attn.out_proj.bias', 'text_model.encoder.layers.3.self_attn.k_proj.weight', 'text_model.encoder.layers.5.self_attn.q_proj.bias', 'text_model.encoder.layers.11.self_attn.q_proj.bias', 'text_model.encoder.layers.0.mlp.fc1.weight', 'text_model.encoder.layers.5.self_attn.v_proj.weight', 'text_model.encoder.layers.8.self_attn.k_proj.weight', 'text_model.encoder.layers.7.mlp.fc1.weight', 'text_model.encoder.layers.9.layer_norm2.weight', 'text_model.encoder.layers.5.layer_norm2.weight', 'text_model.encoder.layers.11.self_attn.v_proj.bias', 'text_model.encoder.layers.10.layer_norm1.weight', 'text_model.encoder.layers.5.mlp.fc2.bias', 'text_model.encoder.layers.7.self_attn.q_proj.bias', 'text_model.encoder.layers.11.self_attn.v_proj.weight', 'text_model.encoder.layers.1.mlp.fc1.weight', 'text_model.encoder.layers.0.self_attn.k_proj.weight', 'text_model.encoder.layers.2.self_attn.v_proj.weight', 'text_model.encoder.layers.9.mlp.fc1.weight', 'text_model.encoder.layers.5.mlp.fc1.weight', 'text_model.encoder.layers.11.mlp.fc2.bias', 'text_model.encoder.layers.10.layer_norm2.bias', 'text_model.encoder.layers.8.self_attn.v_proj.weight', 'text_model.encoder.layers.4.layer_norm2.bias', 'text_model.encoder.layers.7.mlp.fc2.bias', 'text_model.encoder.layers.2.layer_norm2.weight', 'text_model.encoder.layers.7.self_attn.out_proj.weight', 'text_model.encoder.layers.5.self_attn.k_proj.weight', 'text_model.encoder.layers.8.layer_norm1.weight', 'text_model.encoder.layers.2.self_attn.k_proj.weight', 'text_model.encoder.layers.7.self_attn.q_proj.weight', 'text_model.encoder.layers.1.layer_norm1.bias', 'text_model.encoder.layers.0.mlp.fc2.bias', 'text_model.encoder.layers.9.self_attn.q_proj.bias', 'text_model.encoder.layers.3.self_attn.v_proj.bias', 'text_model.encoder.layers.10.self_attn.out_proj.weight', 'text_model.encoder.layers.3.mlp.fc2.bias', 'text_model.encoder.layers.4.self_attn.k_proj.weight', 'text_model.encoder.layers.3.mlp.fc1.weight', 'text_model.encoder.layers.0.mlp.fc1.bias', 'text_model.encoder.layers.0.self_attn.v_proj.weight', 'text_model.encoder.layers.6.self_attn.v_proj.bias', 'text_model.encoder.layers.6.layer_norm1.weight', 'text_model.encoder.layers.11.self_attn.out_proj.bias', 'text_model.encoder.layers.8.self_attn.k_proj.bias', 'text_model.encoder.layers.11.layer_norm2.weight', 'text_model.encoder.layers.3.layer_norm1.weight', 'text_model.encoder.layers.3.layer_norm2.weight', 'text_model.encoder.layers.7.self_attn.k_proj.bias', 'text_model.encoder.layers.6.mlp.fc2.bias', 'text_model.encoder.layers.7.layer_norm2.weight', 'text_model.encoder.layers.4.self_attn.out_proj.weight', 'text_model.encoder.layers.8.layer_norm1.bias', 'text_model.encoder.layers.9.self_attn.k_proj.weight', 'text_model.encoder.layers.9.layer_norm1.bias', 'text_model.encoder.layers.8.self_attn.out_proj.bias', 'text_model.encoder.layers.3.self_attn.out_proj.bias', 'text_model.encoder.layers.1.self_attn.v_proj.weight', 'text_model.encoder.layers.10.self_attn.k_proj.bias', 'text_model.encoder.layers.9.self_attn.out_proj.bias', 'text_model.encoder.layers.4.self_attn.v_proj.bias', 'text_model.encoder.layers.11.mlp.fc1.bias', 'text_model.encoder.layers.7.self_attn.out_proj.bias', 'text_model.encoder.layers.4.self_attn.out_proj.bias', 'text_model.encoder.layers.0.layer_norm1.weight', 'text_model.encoder.layers.0.layer_norm2.bias', 'text_model.encoder.layers.6.self_attn.v_proj.weight', 'text_model.encoder.layers.3.self_attn.k_proj.bias', 'text_model.encoder.layers.11.layer_norm1.bias', 'text_model.encoder.layers.8.self_attn.v_proj.bias', 'text_model.final_layer_norm.weight', 'logit_scale', 'text_model.encoder.layers.8.layer_norm2.weight', 'text_model.encoder.layers.9.layer_norm2.bias', 'text_model.encoder.layers.2.self_attn.k_proj.bias', 'text_model.encoder.layers.9.mlp.fc2.bias', 'text_model.encoder.layers.1.self_attn.q_proj.bias', 'text_model.encoder.layers.6.self_attn.out_proj.weight', 'text_model.encoder.layers.0.mlp.fc2.weight', 'text_model.encoder.layers.10.self_attn.v_proj.weight', 'text_model.encoder.layers.8.mlp.fc1.weight', 'text_model.encoder.layers.9.mlp.fc1.bias', 'text_model.encoder.layers.7.layer_norm1.bias', 'text_model.encoder.layers.7.mlp.fc2.weight', 'text_model.encoder.layers.2.layer_norm1.weight', 'text_model.encoder.layers.11.self_attn.k_proj.bias', 'text_model.encoder.layers.3.self_attn.v_proj.weight', 'text_model.encoder.layers.1.self_attn.out_proj.bias', 'text_model.encoder.layers.10.self_attn.q_proj.weight', 'text_model.encoder.layers.9.layer_norm1.weight', 'text_model.encoder.layers.5.self_attn.v_proj.bias', 'text_model.encoder.layers.4.layer_norm1.weight']
- This IS expected if you are initializing CLIPVisionModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing CLIPVisionModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/aneesh/github/slot_vqa/train.py:237: UserWarning: torch.nn.utils.clip_grad_norm is now deprecated in favor of torch.nn.utils.clip_grad_norm_.
  torch.nn.utils.clip_grad_norm(model.parameters(), args.clip)
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 18, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 28, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 28, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 26, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 20, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 26, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 20, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 26, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 20, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 19, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 26, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 22, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 24, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 21, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 20, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 23, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 20, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
img.shape=torch.Size([64, 3, 224, 224]), ques.shape=torch.Size([64, 25, 1]) ,ans.shape=torch.Size([64])
ans.shape=torch.Size([64]), pred.shape=torch.Size([64, 1853])
Process SpawnProcess-1:
Traceback (most recent call last):
  File "/home/aneesh/.conda/envs/slotvqa/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/home/aneesh/.conda/envs/slotvqa/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/aneesh/.conda/envs/slotvqa/lib/python3.9/site-packages/torch/multiprocessing/spawn.py", line 71, in _wrap
    pass  # SIGINT; Killed by parent, do nothing
KeyboardInterrupt